knitr::opts_chunk$set(echo = F, message = F, include = T, eval = T, warning = F,
cache = F)
library(dplyr)
library(readr)
library(tibble)
library(tidyr)
library(ggplot2)
library(DESeq2)
library(UpSetR)
library(xlsx)
library(rtracklayer)
library(ggpmisc)
library(ggpubr)
library(broom)
library(kableExtra)
library(clusterProfiler)
orf_to_common <- function(keys){
commons <- AnnotationDbi::select(org.Sc.sgd.db::org.Sc.sgd.db,
keys = keys,
columns=c("COMMON"),
keytype="ORF")
commons <- commons[match(unique(commons$ORF), commons$ORF), ]
commons <- commons[ , -2]
commons$COMMON <- ifelse(is.na(commons$COMMON), commons$ORF, commons$COMMON)
commons <- unique(commons[ , ])
commons <- commons$COMMON
return(commons)
}
orf_to_description <- function(keys){
description <- AnnotationDbi::select(org.Sc.sgd.db::org.Sc.sgd.db,
keys = keys,
columns=c("DESCRIPTION"),
keytype="ORF")
description <- description[match(unique(description$ORF), description$ORF), ]
description <- description$DESCRIPTION
return(description)
}
gtf <- import("inputs/GCF_000146045.2_R64_genomic.gtf")
features <- gtf %>%
as.data.frame() %>%
filter(type == "gene")
introns <- gtf %>%
as.data.frame() %>%
filter(type == "exon") %>%
group_by(gene_id) %>%
filter(n() > 1) %>%
ungroup() %>%
dplyr::select(gene_id)
introns <- unique(introns$gene_id)
features <- features %>%
mutate(introns = ifelse(gene_id %in% introns, "yes", "no"))
features <- features %>%
dplyr::select(gene_id, width, strand, pseudo, introns)
norm_dds <- estimateSizeFactors(dds)
View(gtf)
View(features)
View(features)
rownames(features) <- features$gene_id
View(features)
resultsDF$Gene_ID <- AnnotationDbi::mapIds(org.Sc.sgd.db, keys = rownames(resultsDF), keytype = "ORF", column = "GENENAME")
View(features)
features$Gene_ID <- AnnotationDbi::mapIds(org.Sc.sgd.db, keys = rownames(resultsDF), keytype = "ORF", column = "GENENAME")
View(features)
features$Gene_ID <- AnnotationDbi::mapIds(org.Sc.sgd.db, keys = rownames(features), keytype = "ORF", column = "GENENAME")
library(org.Sc.sgd.db)
features$Gene_ID <- AnnotationDbi::mapIds(org.Sc.sgd.db, keys = rownames(features), keytype = "ORF", column = "GENENAME")
View(features)
colnames(features) <- c('ORF', 'Length', 'Strand', 'Pseudo', 'Introns', 'Gene')
write.csv(features, "features.csv")
gtf <- import("inputs/GCF_000146045.2_R64_genomic.gtf")
gtf <- import("inputs/GCF_000146045.2_R64_genomic.gtf")
features <- gtf %>%
as.data.frame() %>%
filter(type == "gene")
features <- gtf %>%
as.data.frame() %>%
filter(type == "gene")
introns <- gtf %>%
as.data.frame() %>%
filter(type == "exon") %>%
group_by(gene_id) %>%
filter(n() > 1) %>%
ungroup() %>%
dplyr::select(gene_id)
introns <- unique(introns$gene_id)
features <- features %>%
mutate(introns = ifelse(gene_id %in% introns, "yes", "no"))
View(features)
gtf <- import("inputs/GCF_000146045.2_R64_genomic.gtf")
features <- gtf %>%
as.data.frame() %>%
filter(type == "gene")
introns <- gtf %>%
as.data.frame() %>%
filter(type == "exon") %>%
group_by(gene_id) %>%
filter(n() > 1) %>%
ungroup() %>%
dplyr::select(gene_id)
introns <- unique(introns$gene_id)
features <- features %>%
mutate(introns = ifelse(gene_id %in% introns, "yes", "no"))
features <- features %>%
dplyr::select(gene_id, width, strand, pseudo, introns)
norm_dds <- estimateSizeFactors(dds)
View(features)
gtf <- import("inputs/GCF_000146045.2_R64_genomic.gtf")
features <- gtf %>%
as.data.frame() %>%
filter(type == "gene")
introns <- gtf %>%
as.data.frame() %>%
filter(type == "exon") %>%
group_by(gene_id) %>%
filter(n() > 1) %>%
ungroup() %>%
dplyr::select(gene_id)
gtf <- import("inputs/GCF_000146045.2_R64_genomic.gtf")
features <- gtf %>%
as.data.frame() %>%
filter(type == "gene")
introns <- gtf %>%
as.data.frame() %>%
filter(type == "exon") %>%
group_by(gene_id) %>%
filter(n() > 1) %>%
ungroup() %>%
dplyr::select(gene_id)
introns <- unique(introns$gene_id)
features <- features %>%
mutate(introns = ifelse(gene_id %in% introns, "yes", "no"))
View(features)
write.csv(features, "features.csv")
