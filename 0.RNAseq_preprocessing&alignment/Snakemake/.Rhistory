knitr::opts_chunk$set(echo = F, message = F, include = T, eval = T, warning = F,
cache = F)
knitr::opts_chunk$set(echo = F, message = F, include = T, eval = T, warning = F,
cache = F)
library(dplyr)
library(readr)
library(tibble)
library(tidyr)
library(ggplot2)
library(DESeq2)
library(UpSetR)
install.packages("UpSetR")
library(dplyr)
library(readr)
library(tibble)
library(tidyr)
library(ggplot2)
library(DESeq2)
library(UpSetR)
library(xlsx)
install.packages("xlsx")
library(dplyr)
library(readr)
library(tibble)
library(tidyr)
library(ggplot2)
library(DESeq2)
library(UpSetR)
library(xlsx)
library(xlsx)
library(xlsx)
library(rtracklayer)
library(ggpubr)
library(broom)
library(kableExtra)
library(kableExtra)
library(clusterProfiler)
install.packages("clusterProfiler")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("clusterProfiler")
library(clusterProfiler)
library(dplyr)
library(readr)
library(tibble)
library(tidyr)
library(ggplot2)
library(DESeq2)
library(UpSetR)
library(xlsx)
library(rtracklayer)
library(ggpmisc)
library(ggpubr)
library(broom)
library(kableExtra)
library(clusterProfiler)
orf_to_common <- function(keys){
commons <- AnnotationDbi::select(org.Sc.sgd.db::org.Sc.sgd.db,
keys = keys,
columns=c("COMMON"),
keytype="ORF")
commons <- commons[match(unique(commons$ORF), commons$ORF), ]
commons <- commons[ , -2]
commons$COMMON <- ifelse(is.na(commons$COMMON), commons$ORF, commons$COMMON)
commons <- unique(commons[ , ])
commons <- commons$COMMON
return(commons)
}
orf_to_description <- function(keys){
description <- AnnotationDbi::select(org.Sc.sgd.db::org.Sc.sgd.db,
keys = keys,
columns=c("DESCRIPTION"),
keytype="ORF")
description <- description[match(unique(description$ORF), description$ORF), ]
description <- description$DESCRIPTION
return(description)
}
info <- read_csv("C:/Users/anmdo/Desktop/InputFiles/samples.csv")
unique(info$group)
logfc_threshold = 1
info <- read_csv("C:/Users/anmdo/Desktop/InputFiles/samples.csv")
info$group <- factor(info$group, levels = c("2412", "2527", "3593", "2527_25", "2527_30", "2527_37", "3771_30"))
counts <- read_tsv("C:/Users/anmdo/Desktop/InputFiles/raw_counts.csv") %>%
filter(!grepl("__", gene)) %>%
select(!starts_with("AP_D")) %>%
column_to_rownames("gene")
counts <- read_tsv("C:/Users/anmdo/Desktop/InputFiles/raw_counts.csv") %>%
filter(!grepl("__", gene)) %>%
select(!starts_with("AP_D")) %>%
column_to_rownames("gene")
logfc_threshold = 1
info <- read_csv("C:/Users/anmdo/Desktop/InputFiles/samples.csv")
info$group <- factor(info$group, levels = c("2412", "2527", "3593", "2527_25", "2527_30", "2527_37", "3771_30"))
counts <- read_tsv("C:/Users/anmdo/Desktop/InputFiles/raw_counts.csv") #%>%
# filter(!grepl("__", gene)) %>%
# select(!starts_with("AP_D")) %>%
# column_to_rownames("gene")
dds <- DESeqDataSetFromMatrix(counts,
colData = info,
design = ~ condition)
logfc_threshold = 1
info <- read_csv("C:/Users/anmdo/Desktop/InputFiles/samples.csv")
info$group <- factor(info$group, levels = c("2412", "2527", "3593", "2527_25", "2527_30", "2527_37", "3771_30"))
counts <- read_tsv("C:/Users/anmdo/Desktop/InputFiles/raw_counts.csv") #%>%
# filter(!grepl("__", gene)) %>%
# select(!starts_with("AP_D")) %>%
# column_to_rownames("gene")
dds <- DESeqDataSetFromMatrix(counts,
colData = info,
design = ~ group)
